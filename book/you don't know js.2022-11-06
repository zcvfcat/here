PART I 타입과 문법

1장 타입
 1.1 타입, 그 실체를 이해하자
 1.2 내장 타입
 1.3 값은 타입을 가진다
  1.3.1 값이 없는 vs 선언되지 않은
  1.3.2 선언되지 않은 변수
 1.4 정리하기

2장 값
 2.1 배열
  2.1.1 유사 배열
 2.2 문자열
 2.3 숫자
  2.3.1 숫자 구문
  2.3.2 작은 소수 값
  2.3.3 안전한 정수 범위
  2.3.4 정수인지 확인
  2.3.5 32비트 (부호 있는) 정수
 2.4 특수 값
  2.4.1 값 아닌 값
  2.4.2 Undefined
  2.4.3 특수 숫자
  2.4.4 특이한 동등 비교
 2.5 값 vs 레퍼런스
 2.6 정리하기

3장 네이티브
 3.1 내부 [[Class]]
 3.2 래퍼 박싱하기
  3.2.1 객체 래퍼의 함정
 3.3 언박싱
 3.4 네이티브, 나는 생성자다
  3.4.1 Array( )
  3.4.2 Object( ), Function( ), and RegExp( )
  3.4.3 Date( ) and Error( )
  3.4.4 Symbol( )
  3.4.5 네이티브 프로토타입
 3.5 정리하기

4장 강제변환
 4.1 값 변환
 4.2 추상 연산
  4.2.1 ToString
  4.2.2 ToNumber
  4.2.3 ToBoolean
 4.3 명시적 강제변환
  4.3.1 명시적 강제변환: 문자열 ↔ 숫자
  4.3.2 명시적 강제변환: 숫자 형태의 문자열 파싱
  4.3.3 명시적 강제변환: * → 불리언
 4.4 암시적 변환
  4.4.1 ‘암시적’이란?
  4.4.2 암시적 강제변환: 문자열 ↔ 숫자
  4.4.3 암시적 강제변환: 불리언 → 숫자
  4.4.4 암시적 강제변환: * → 불리언
  4.4.5 &&와 || 연산자
  4.4.6 심벌의 강제변환
 4.5 느슨한/엄격한 동등 비교
  4.5.1 비교 성능
  4.5.2 추상 동등 비교
  4.5.3 희귀 사례
 4.6 추상 관계 비교
 4.7 정리하기

5장 문법
 5.1 문과 표현식
  5.1.1 문의 완료 값
  5.1.2 표현식의 부수 효과
  5.1.3 콘텍스트 규칙
 5.2 연산자 우선순위
  5.2.1 단락 평가
  5.2.2 끈끈한 우정
  5.2.3 결합성
  5.2.4 분명히 하자
 5.3 세미콜론 자동 삽입
  5.3.1 에러 정정
 5.4 에러
  5.4.1 너무 이른 변수 사용
  5.5 함수 인자
 5.6 try…finally
 5.7 switch
 5.8 정리하기

PART I I 스코프와 클로저

1장 스코프란 무엇인가
 1.1 컴파일러 이론
 1.2 스코프 이해하기
  1.2.1 출연진
  1.2.2 앞과 뒤
  1.2.3 컴파일러체
  1.2.4 엔진과 스코프의 대화
  1.2.5 퀴즈
 1.3 중첩 스코프
  1.3.1 비유로 배워보기
 1.4 오류
 1.5 정리하기
  1.5.1 퀴즈 답안

2장 렉시컬 스코프
 2.1 렉스타임
 2.1.1 검색
 2.2 렉시컬 속이기
  2.2.1 eval
  2.2.2 with
  2.2.3 성능
 2.3 정리하기

3장 함수 vs 블록 스코프
 3.1 함수 기반 스코프
 3.2 일반 스코프에 숨기
  3.2.1 충돌 회피
 3.3 스코프 역할을 하는 함수
  3.3.1 익명 vs 기명
  3.3.2 함수 표현식 즉시 호출하기
 3.4 스코프 역할을 하는 블록
  3.4.1 with
  3.4.2 try/catch
  3.4.3 let
  3.4.4 const
 3.4 정리하기

4장 호이스팅
 4.1 닭이 먼저냐 달걀이 먼저냐
 4.2 컴파일러는 두 번 공격한다
 4.3 함수가 먼저다
 4.4 정리하기

5장 스코프 클로저
 5.1 깨달음
 5.2 핵심
 5.3 이제 나는 볼 수 있다
 5.4 반복문과 클로저
  5.4.1 다시 보는 블록 스코프
 5.5 모듈
  5.5.1 현재의 모듈
  5.5.2 미래의 모듈
 5.6 정리하기

부록 A 다양한 환경의 자바스크립트
부록 A.1 ECMAScript
 부록 A.2 호스트 객체
 부록 A.3 전역 DOM 변수
 부록 A.4 네이티브 프로토타입
 부록 A.5 〈script〉들
 부록 A.6 예약어
 부록 A.7 구현 한계

부록 B 스코프와 렉시컬 this
 부록 B.1 동적 스코프
 부록 B.2 폴리필링 블록 스코프
 부록 B.3 렉시컬 this